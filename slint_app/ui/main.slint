import { ScrollView, Button, CheckBox, SpinBox, Slider, GroupBox, LineEdit, StandardListView,
    ComboBox, HorizontalBox, VerticalBox, GridBox, TabWidget, TextEdit, AboutSlint } from "std-widgets.slint";

export struct MousePos := {
    x: length,
    y: length,
}

App := Window {
    preferred-width: 1000px;
    preferred-height: 800px;
    title: "Volume app";
    icon: @image-url("../../logo/slint-logo-small-light-128x128.png");

    property<image> render_target;
    callback send_rendered_frame();

    callback render_area_mp(MousePos) -> MousePos;

    // Just declaration, body is in Rust code
    callback render_area_move_event(MousePos);

    callback render_area_pointer_event <=> render_area.pointer-event;

    HorizontalBox {
        TabWidget {
            Tab {
                title: "Controls";
                VerticalBox {
                    alignment: start;
                    HorizontalBox {
                        alignment: start;
                        GroupBox {
                            title: "Button";

                            Button {
                                text: "Regular Button";
                            }
                        }

                        GroupBox {
                            title: "Button with Icon";

                            Button {
                                text: "Regular Button";
                                icon: @image-url("thumbsup.png");
                            }
                        }

                        GroupBox {
                            title: "CheckBox";
                            checkbox := CheckBox {
                                text: checkbox.checked ? "(checked)" : "(unchecked)";
                                checked: true;
                            }
                        }
                    }

                    HorizontalBox {
                        alignment: start;
                        GroupBox {
                            title: "SpinBox";
                            SpinBox {
                                value: 42;
                            }
                        }

                        GroupBox {
                            title: "ComboBox";
                            ComboBox {
                                model: ["Select Something", "From this", "Combobox"];
                            }
                        }
                    }

                    GroupBox {
                        title: "Slider";
                        Slider {
                            minimum: -100;
                            maximum: 100;
                            value: 42;
                        }
                    }

                    GroupBox {
                        title: "LineEdit";
                        LineEdit {
                            placeholder-text: "Enter some text";
                        }
                    }
                }
            }
        }

        RenTar := Image {
            source: root.render_target;
            width: 700px;
            height: 700px;

            render_area := TouchArea {
                width: parent.width;
                height: parent.height;

                moved => {
                    root.render_area_move_event({ x: self.mouse-x, y: self.mouse-y})
                }
            }
        }
    }
}